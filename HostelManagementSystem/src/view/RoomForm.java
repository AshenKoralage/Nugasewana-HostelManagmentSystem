/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.HostelController;
import controller.RoomController;
import controller.TypeController;
import dto.HostelDTO;
import dto.RoomDTO;
import dto.TypeDTO;
import util.Validation;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.IdGenerator;

/**
 *
 * @author Ashen Koralage
 */
public class RoomForm extends javax.swing.JFrame {

    private DefaultTableModel dtm;

    /**
     * Creates new form Room
     */
    public RoomForm() {
        initComponents();
        dtm = (DefaultTableModel) tblroom.getModel();
        getAllRooms();
        loadAllHostels();
        loadAllRoomTypes();
        setIdAuto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cmbRoomType = new javax.swing.JComboBox<>();
        cmbHID = new javax.swing.JComboBox<>();
        btnupdateRoom = new javax.swing.JButton();
        btndeleteRoom = new javax.swing.JButton();
        btnsaveRoom = new javax.swing.JButton();
        btnsearch = new javax.swing.JButton();
        txtWidth = new javax.swing.JTextField();
        txtRoomNumber = new javax.swing.JTextField();
        txtBedCount1 = new javax.swing.JTextField();
        txtFloorNumber1 = new javax.swing.JTextField();
        txtCurrentBorders1 = new javax.swing.JTextField();
        txtLength1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblroom = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Width (Ft)");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 240, 120, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Length (Ft)");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 290, 130, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home_1.png"))); // NOI18N
        jLabel9.setText("Home");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 20, 80, 40));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Hostel ID");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 120, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Add Room");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, 200, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Room Type ID");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 120, -1));

        jLabel15.setBackground(new java.awt.Color(102, 102, 102));
        jLabel15.setOpaque(true);
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 60));

        cmbRoomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmbRoomType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbRoomTypeItemStateChanged(evt);
            }
        });
        cmbRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRoomTypeActionPerformed(evt);
            }
        });
        jPanel1.add(cmbRoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 190, 30));

        cmbHID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHIDItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbHID, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 190, 30));

        btnupdateRoom.setBackground(new java.awt.Color(255, 255, 255));
        btnupdateRoom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnupdateRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/page_edit.png"))); // NOI18N
        btnupdateRoom.setText("Update");
        btnupdateRoom.setContentAreaFilled(false);
        btnupdateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateRoomActionPerformed(evt);
            }
        });
        jPanel1.add(btnupdateRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 610, 110, 40));

        btndeleteRoom.setBackground(new java.awt.Color(255, 255, 255));
        btndeleteRoom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btndeleteRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btndeleteRoom.setText("Remove ");
        btndeleteRoom.setContentAreaFilled(false);
        btndeleteRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteRoomActionPerformed(evt);
            }
        });
        jPanel1.add(btndeleteRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 560, 120, 40));

        btnsaveRoom.setBackground(new java.awt.Color(255, 255, 255));
        btnsaveRoom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnsaveRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/accept.png"))); // NOI18N
        btnsaveRoom.setText("Save");
        btnsaveRoom.setContentAreaFilled(false);
        btnsaveRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveRoomActionPerformed(evt);
            }
        });
        jPanel1.add(btnsaveRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 510, 110, 40));

        btnsearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnsearch.setText("Search");
        btnsearch.setContentAreaFilled(false);
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 660, 120, 40));

        txtWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWidthActionPerformed(evt);
            }
        });
        txtWidth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWidthKeyReleased(evt);
            }
        });
        jPanel1.add(txtWidth, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 230, 440, 30));

        txtRoomNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomNumberActionPerformed(evt);
            }
        });
        jPanel1.add(txtRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 420, 30));

        txtBedCount1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBedCount1ActionPerformed(evt);
            }
        });
        txtBedCount1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBedCount1KeyReleased(evt);
            }
        });
        jPanel1.add(txtBedCount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 430, 30));

        txtFloorNumber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFloorNumber1ActionPerformed(evt);
            }
        });
        txtFloorNumber1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFloorNumber1KeyReleased(evt);
            }
        });
        jPanel1.add(txtFloorNumber1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 130, 440, 30));

        txtCurrentBorders1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentBorders1ActionPerformed(evt);
            }
        });
        txtCurrentBorders1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCurrentBorders1KeyReleased(evt);
            }
        });
        jPanel1.add(txtCurrentBorders1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 180, 440, 30));

        txtLength1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLength1ActionPerformed(evt);
            }
        });
        txtLength1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLength1KeyReleased(evt);
            }
        });
        jPanel1.add(txtLength1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 280, 440, 30));

        tblroom.setBackground(new java.awt.Color(153, 153, 153));
        tblroom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room Number", "Type ID", "Hostel ID", "Bed Count", "Floor Number", "Current borders", "Width", "Length"
            }
        ));
        tblroom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblroomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblroom);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, 1050, 280));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Current Borders");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 190, 130, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Floor Number");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 140, 120, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Beds Count");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 120, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Room Number");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 120, -1));

        jLabel12.setFont(new java.awt.Font("Trajan Pro", 3, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 153, 0));
        jLabel12.setText("Nugasewana");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 200, 40));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), null, null, new java.awt.Color(102, 102, 102)));
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 770));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gray background.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWidthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWidthActionPerformed

    private void txtRoomNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomNumberActionPerformed

    }//GEN-LAST:event_txtRoomNumberActionPerformed

    private void txtBedCount1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBedCount1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBedCount1ActionPerformed

    private void txtFloorNumber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFloorNumber1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFloorNumber1ActionPerformed

    private void txtCurrentBorders1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentBorders1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentBorders1ActionPerformed

    private void txtLength1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLength1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLength1ActionPerformed

    private void btnupdateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateRoomActionPerformed
        try {
            String roomNumber = txtRoomNumber.getText();
            String Rtype = cmbRoomType.getSelectedItem().toString();
            String hid = cmbHID.getSelectedItem().toString();
            String bedCount = txtBedCount1.getText();
            String floorNumber = txtFloorNumber1.getText();
            String currentBorders = txtCurrentBorders1.getText();
            String width = txtWidth.getText();
            String length = txtLength1.getText();

            RoomDTO roomDTO = new RoomDTO(roomNumber, Rtype, hid, bedCount, floorNumber, currentBorders, width, length);
            boolean updateRoom = RoomController.updateRoom(roomDTO);
            if (updateRoom) {
                JOptionPane.showMessageDialog(this, "Room Update Successfully");
                getAllRooms();
                clearAll();
            } else {
                JOptionPane.showMessageDialog(this, "Room Update Failed");
                clearAll();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnupdateRoomActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        new DashBoard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void btnsaveRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveRoomActionPerformed
        try {
            String roomNumber = txtRoomNumber.getText();
            String Rtype = cmbRoomType.getSelectedItem().toString();
            String hid = cmbHID.getSelectedItem().toString();
            String bedCount = txtBedCount1.getText();
            String floorNumber = txtFloorNumber1.getText();
            String currentBorders = txtCurrentBorders1.getText();
            String width = txtWidth.getText();
            String length = txtLength1.getText();

            RoomDTO roomModel = new RoomDTO(roomNumber, Rtype, hid, bedCount, floorNumber, currentBorders, width, length);
            boolean addRoom = RoomController.addRoom(roomModel);
            if (addRoom) {
                JOptionPane.showMessageDialog(this, "Room Save Successfully");
                getAllRooms();
                clearAll();
            } else {
                JOptionPane.showMessageDialog(this, "Room Save Failed");
                clearAll();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsaveRoomActionPerformed

    private void cmbHIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHIDItemStateChanged

    }//GEN-LAST:event_cmbHIDItemStateChanged

    private void cmbRoomTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbRoomTypeItemStateChanged

    }//GEN-LAST:event_cmbRoomTypeItemStateChanged

    private void btndeleteRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteRoomActionPerformed
        try {
            String Rid = txtRoomNumber.getText();
            boolean deleteRoom = deleteRoom(Rid);
            if (deleteRoom) {
                JOptionPane.showMessageDialog(this, "Room Delete Successfully");
                getAllRooms();
                clearAll();
            } else {
                JOptionPane.showMessageDialog(this, "Room Delete Failed");
                clearAll();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btndeleteRoomActionPerformed

    private void tblroomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblroomMouseClicked
        int selectedRow = tblroom.getSelectedRow();
        String Rnumber = dtm.getValueAt(selectedRow, 0).toString();
        String TID = dtm.getValueAt(selectedRow, 1).toString();
        String hid = dtm.getValueAt(selectedRow, 2).toString();
        String Bcount = dtm.getValueAt(selectedRow, 3).toString();
        String Floor = dtm.getValueAt(selectedRow, 4).toString();
        String cBorders = dtm.getValueAt(selectedRow, 5).toString();
        String width = dtm.getValueAt(selectedRow, 6).toString();
        String length = dtm.getValueAt(selectedRow, 7).toString();
        txtRoomNumber.setText(Rnumber);
        cmbRoomType.addItem(TID);
        cmbHID.addItem(hid);
        txtBedCount1.setText(Bcount);
        txtFloorNumber1.setText(Floor);
        txtCurrentBorders1.setText(cBorders);
        txtWidth.setText(width);
        txtLength1.setText(length);
    }//GEN-LAST:event_tblroomMouseClicked

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        try {
//            loadAllRooms();
            String search = txtRoomNumber.getText();
            RoomDTO searchRoom = RoomController.searchRoom(search);
            if (searchRoom != null) {
                txtRoomNumber.setText(searchRoom.getRoom_no());
                txtFloorNumber1.setText(searchRoom.getFloor_number());
                txtBedCount1.setText(searchRoom.getNo_of_beds());
                txtLength1.setText(searchRoom.getLength());
                cmbHID.addItem(searchRoom.getHID());
                cmbRoomType.addItem(searchRoom.getTID());
                txtWidth.setText(searchRoom.getWidth());
                txtCurrentBorders1.setText(searchRoom.getCurrent_Borders_count());
            } else {
                JOptionPane.showMessageDialog(this, "No Such Rooms ");
                clearAll();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void txtBedCount1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBedCount1KeyReleased
      Validation.numberOnly(txtBedCount1);
      //  Validation1 val =new Validation1();
    }//GEN-LAST:event_txtBedCount1KeyReleased

    private void txtFloorNumber1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFloorNumber1KeyReleased
        Validation.numberOnly(txtFloorNumber1);
    }//GEN-LAST:event_txtFloorNumber1KeyReleased

    private void txtCurrentBorders1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCurrentBorders1KeyReleased
        Validation.numberOnly(txtCurrentBorders1);
    }//GEN-LAST:event_txtCurrentBorders1KeyReleased

    private void txtWidthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWidthKeyReleased
        Validation.priceText(txtWidth);
    }//GEN-LAST:event_txtWidthKeyReleased

    private void txtLength1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLength1KeyReleased
        Validation.priceText(txtLength1);
    }//GEN-LAST:event_txtLength1KeyReleased

    private void cmbRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRoomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRoomTypeActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RoomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RoomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RoomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RoomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RoomForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndeleteRoom;
    private javax.swing.JButton btnsaveRoom;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnupdateRoom;
    private javax.swing.JComboBox<String> cmbHID;
    private javax.swing.JComboBox<String> cmbRoomType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblroom;
    private javax.swing.JTextField txtBedCount1;
    private javax.swing.JTextField txtCurrentBorders1;
    private javax.swing.JTextField txtFloorNumber1;
    private javax.swing.JTextField txtLength1;
    private javax.swing.JTextField txtRoomNumber;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables

    private void loadAllHostels() {
        try {
            cmbHID.removeAll();
            ArrayList<HostelDTO> all = HostelController.getAllHostels();
            for (HostelDTO H : all) {
                cmbHID.addItem(H.getHID());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadAllRoomTypes() {
        try {
            cmbRoomType.removeAll();
            ArrayList<TypeDTO> allType = TypeController.getAllTypes();
            for (TypeDTO T : allType) {
                cmbRoomType.addItem(T.getTID());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void getAllRooms() {
        try {
            dtm.setRowCount(0);
            ArrayList<RoomDTO> allRooms = RoomController.getAllRooms();
            for (RoomDTO allRoom : allRooms) {
                Object[] rowdata = {allRoom.getRoom_no(), allRoom.getTID(), allRoom.getHID(), allRoom.getNo_of_beds(), allRoom.getFloor_number(), allRoom.getCurrent_Borders_count(), allRoom.getWidth(), allRoom.getLength()};
                dtm.addRow(rowdata);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void clearAll() {
//        txtRoomNumber.setText("");
        txtCurrentBorders1.setText("");
        txtBedCount1.setText("");
        txtLength1.setText("");
        txtWidth.setText("");
        txtFloorNumber1.setText("");

    }

    private boolean deleteRoom(String Rid) throws ClassNotFoundException, SQLException {
        return RoomController.deleteRoom(Rid);
    }

    private void loadAllRooms() {
        txtRoomNumber.removeAll();
        try {

            ArrayList<RoomDTO> allRooms = RoomController.getAllRooms();
            for (RoomDTO allRoom : allRooms) {
                txtRoomNumber.setText(allRoom.getRoom_no());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setIdAuto() {
        try {
            String newId = IdGenerator.getNewId("Room", "Room_no", "R");
            txtRoomNumber.setText(newId);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GuestRegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GuestRegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
