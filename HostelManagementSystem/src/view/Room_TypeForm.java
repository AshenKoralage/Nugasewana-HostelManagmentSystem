/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.FacilityController;
import controller.HostelController;
import controller.TypeController;
import dto.FacilityDTO;
import dto.FacilityTypeDTO;
import dto.HostelDTO;
import dto.TypeDTO;
import entity.Facility;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import util.IdGenerator;
import util.Validation;

/**
 *
 * @author Ashen Koralage
 */
public class Room_TypeForm extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private DefaultTableModel model;
//    private DefaultTableModel dtm1;
    private ArrayList<Facility> facility;

    /**
     * Creates new form Room_TypeForm
     */
    public Room_TypeForm() {
        initComponents();
        dtm = (DefaultTableModel) tblType.getModel();
//        dtm1 = (DefaultTableModel) myName.getModel();
        model = (DefaultTableModel) tblFacilities2.getModel();
        getAllTypes();
//        getAllTypesMYNAME();
        loadAllFacilities();
//        dtm = (DefaultTableModel) tblFacilities2.getModel();
//        getAllFacilities();
        setIdAuto();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtdescription = new javax.swing.JTextField();
        txtTypeID = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        txtTypename = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblType = new javax.swing.JTable();
        btnupdate = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFacilities2 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        cmbFid = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Trajan Pro", 3, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 153, 0));
        jLabel12.setText("Nugasewana");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 200, 40));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home_1.png"))); // NOI18N
        jLabel13.setText("Home");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 10, 90, 30));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Room Types");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 170, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Price");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 170, 70, 20));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Name");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 50, -1));

        txtdescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdescriptionActionPerformed(evt);
            }
        });
        txtdescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdescriptionKeyReleased(evt);
            }
        });
        jPanel2.add(txtdescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 210, 440, 30));

        txtTypeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeIDActionPerformed(evt);
            }
        });
        jPanel2.add(txtTypeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 400, 30));

        txtprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpriceActionPerformed(evt);
            }
        });
        txtprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpriceKeyReleased(evt);
            }
        });
        jPanel2.add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 160, 440, 30));

        txtTypename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypenameActionPerformed(evt);
            }
        });
        txtTypename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTypenameKeyReleased(evt);
            }
        });
        jPanel2.add(txtTypename, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 400, 30));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Room Type ID");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 120, -1));

        tblType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type ID", "Name", "Price", "Description"
            }
        ));
        tblType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTypeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblType);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 780, 300));

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/page_edit.png"))); // NOI18N
        btnupdate.setText("Update");
        btnupdate.setContentAreaFilled(false);
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 610, -1, -1));

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/accept.png"))); // NOI18N
        btnsave.setText("Save");
        btnsave.setContentAreaFilled(false);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 490, -1, -1));

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btndelete.setText("Delete");
        btndelete.setContentAreaFilled(false);
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 550, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Facilities");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 480, 140, -1));

        tblFacilities2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Facilities", "Facility ID"
            }
        ));
        jScrollPane2.setViewportView(tblFacilities2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 510, 280, 110));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Description");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 220, 90, -1));

        cmbFid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFidActionPerformed(evt);
            }
        });
        jPanel2.add(cmbFid, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 480, 120, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 30, 30));

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 620, -1, -1));

        jLabel20.setBackground(new java.awt.Color(102, 102, 102));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setOpaque(true);
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 760));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gray background.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1330, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpriceActionPerformed
        txtdescription.requestFocus();
    }//GEN-LAST:event_txtpriceActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed

        try {
            String TID = txtTypeID.getText();
            String price = txtprice.getText();
            String name = txtTypename.getText();
            String description = txtdescription.getText();

            ArrayList<FacilityTypeDTO> ftdtos = new ArrayList();
            for (int i = 0; i < model.getRowCount(); i++) {
                String fid = model.getValueAt(i, 1).toString();
                FacilityTypeDTO faciltyType = new FacilityTypeDTO(TID, fid);
                ftdtos.add(faciltyType);
            }

            TypeDTO typModel = new TypeDTO(TID, price, name, description, ftdtos);

            boolean addType = TypeController.addType(typModel);
            if (addType) {
                JOptionPane.showMessageDialog(this, "Room Type Save Successfully");
                getAllTypes();
                clearAll();

            } else {
                JOptionPane.showMessageDialog(this, "Failed!");
                clearAll();
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnsaveActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        try {
            String tid = txtTypeID.getText();
            boolean deleteType = deleteType(tid);
            if (deleteType) {
                JOptionPane.showMessageDialog(this, "Successfully Deleted");
                clearAll();
                getAllTypes();
            } else {
                JOptionPane.showMessageDialog(this, "Faild!\n Please Check Once Again");
                clearAll();
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void tblTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTypeMouseClicked
        int selectedRow = tblType.getSelectedRow();
//        int selectedRow1 = tblFacilities2.getSelectedRow();
        String TID = dtm.getValueAt(selectedRow, 0).toString();
        String name = dtm.getValueAt(selectedRow, 1).toString();
        String price = dtm.getValueAt(selectedRow, 2).toString();
        String Description = dtm.getValueAt(selectedRow, 3).toString();
        txtTypeID.setText(TID);
        txtTypename.setText(name);
        txtdescription.setText(Description);
        txtprice.setText(price);

    }//GEN-LAST:event_tblTypeMouseClicked

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        try {
            String TID = txtTypeID.getText();
            String price = txtprice.getText();
            String name = txtTypename.getText();
            String description = txtdescription.getText();

            TypeDTO typeModel = new TypeDTO(TID, price, name, description);
            boolean updateType = TypeController.updateType(typeModel);
            if (updateType) {
                JOptionPane.showMessageDialog(this, "Successfully Updated");
                getAllTypes();
                clearAll();
            } else {
                JOptionPane.showMessageDialog(this, "Faild!\n Pleace Cheack Once Again");
                clearAll();
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void txtTypeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeIDActionPerformed

        try {
//            clearAll();

            String Tid = txtTypeID.getText();
            TypeDTO searchType = TypeController.searchType(Tid);
            if (searchType != null) {
                txtTypeID.setText(searchType.getTID());
                txtTypename.setText(searchType.getName());
                txtdescription.setText(searchType.getDescription() + "");
                txtprice.setText(searchType.getPrice() + "");
            } else {
                JOptionPane.showMessageDialog(this, "No Such Types According To The ID :" + Tid);
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        txtTypename.requestFocus();
    }//GEN-LAST:event_txtTypeIDActionPerformed

    private void txtTypenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypenameActionPerformed
        txtprice.requestFocus();
    }//GEN-LAST:event_txtTypenameActionPerformed

    private void txtdescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdescriptionActionPerformed
        btnsave.requestFocus();
        btnsave.doClick();
        txtTypeID.requestFocus();
    }//GEN-LAST:event_txtdescriptionActionPerformed

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        new DashBoard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel13MouseClicked

    private void txtTypenameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTypenameKeyReleased
        Validation.name(txtTypename);
    }//GEN-LAST:event_txtTypenameKeyReleased

    private void txtpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpriceKeyReleased
        Validation.priceText(txtprice);
    }//GEN-LAST:event_txtpriceKeyReleased

    private void txtdescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdescriptionKeyReleased
        Validation.name(txtdescription);
    }//GEN-LAST:event_txtdescriptionKeyReleased

    private void cmbFidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFidActionPerformed
        String name = cmbFid.getSelectedItem().toString();

        try {
            ArrayList<FacilityDTO> allfacilities = FacilityController.getAllFacility();
            for (FacilityDTO allFaci : allfacilities) {
                if (allFaci.getName().equalsIgnoreCase(name)) {
                    Object[] rowData = {allFaci.getName(), allFaci.getFID()};
                    model.addRow(rowData);
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cmbFidActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        clearAllData();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Room_TypeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Room_TypeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Room_TypeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Room_TypeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Room_TypeForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cmbFid;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblFacilities2;
    private javax.swing.JTable tblType;
    private javax.swing.JTextField txtTypeID;
    private javax.swing.JTextField txtTypename;
    private javax.swing.JTextField txtdescription;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables

    private void getAllTypes() {
        try {
            dtm.setRowCount(0);
            ArrayList<TypeDTO> allTypes = TypeController.getAllTypes();
            for (TypeDTO all : allTypes) {
                Object[] rowdata = {all.getTID(), all.getName(), all.getPrice(), all.getDescription()};
                dtm.addRow(rowdata);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Room_TypeForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Room_TypeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearAll() {
        txtTypeID.setText("");
        txtTypename.setText("");
        txtdescription.setText("");
        txtprice.setText("");
    }

    private boolean deleteType(String tid) throws ClassNotFoundException, SQLException {
        return TypeController.deleteType(tid);
    }

    private void loadAllFacilities() {
        try {
            model.setRowCount(0);
            cmbFid.removeAll();
            ArrayList<FacilityDTO> allfacilities = FacilityController.getAllFacility();
            for (FacilityDTO allFaci : allfacilities) {
                cmbFid.addItem(allFaci.getName());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void setIdAuto() {
        try {
            String newId = IdGenerator.getNewId("type", "TID", "T");
            txtTypeID.setText(newId);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GuestRegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GuestRegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearAllData() {
        try {
            int selectedRow = tblFacilities2.getSelectedRow();
            String facilities = model.getValueAt(selectedRow, 0).toString();
            model.removeRow(selectedRow);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, e.getMessage() + "\n Please select a row beofore Refresh..!", "Warning", JOptionPane.ERROR_MESSAGE);
        }

//        model.getValueAt(selectedRow, 1);
    }
}
